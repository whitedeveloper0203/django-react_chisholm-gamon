version: '3'

services:
  # Frontend
  frontend:
    build:
      context: ../../frontend/
      dockerfile: Dockerfile
    volumes:
      - ../../frontend:/code
    expose:
      - 3000
    command: sh -c 'npm run build && npm run start'
    environment:
        VIRTUAL_HOST: chisholm.techequipt.com.au
        LETSENCRYPT_HOST: chisholm.techequipt.com.au
        LETSENCRYPT_EMAIL: jason@techequipt.com.au
    depends_on:
      - backend
      - nginx
      - dockergen
      - letsencrypt

  # Django / API services
  db:
    image: mdillon/postgis
    ports:
      - "5432:5432"
  redis:
    image: redis
    ports:
      - "6379:6379"
  elasticsearch5:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 20M
    volumes:
       - '../../backend/es/:/usr/share/elasticsearch/data'
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000 --settings chisholm.settings.staging
    volumes:
      - ../../backend:/code
    expose:
      - 8000
    depends_on:
      - db
      - elasticsearch5
      - nginx
      - dockergen
      - letsencrypt
    environment:
        VIRTUAL_HOST: chisholm-api.techequipt.com.au
        LETSENCRYPT_HOST: chisholm-api.techequipt.com.au
        LETSENCRYPT_EMAIL: jason@techequipt.com.au

  # Nginx & LetsEncrypt
  nginx:
    image: nginx:1.13.1
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  dockergen:
    image: jwilder/docker-gen:0.7.3
    container_name: nginx-proxy-gen
    depends_on:
      - nginx
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    depends_on:
      - nginx
      - dockergen
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy-gen
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  conf:
  vhost:
  html:
  certs:

# Do not forget to 'docker network create nginx-proxy' before launch, and to add '--network nginx-proxy' to proxied containers.

networks:
  default:
    external:
      name: nginx-proxy
