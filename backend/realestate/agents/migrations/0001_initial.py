# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-11 00:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0019_delete_filter'),
        ('offices', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('canonical', models.URLField(blank=True, default='')),
                ('title_tag', models.CharField(blank=True, default='', max_length=255)),
                ('meta_title', models.CharField(blank=True, default='', max_length=255)),
                ('meta_description', models.TextField(blank=True, default='')),
                ('meta_keywords', models.TextField(blank=True, default='')),
                ('og_title', models.CharField(blank=True, default='', max_length=255)),
                ('og_type', models.CharField(blank=True, default='', max_length=50)),
                ('og_url', models.URLField(blank=True, default='')),
                ('og_img', models.URLField(blank=True, default='')),
                ('og_description', models.TextField(blank=True, default='')),
                ('twitter_card', models.CharField(blank=True, default='', help_text='Type of Twitter card', max_length=50)),
                ('twitter_site', models.CharField(blank=True, default='', help_text='@name of publisher', max_length=50)),
                ('twitter_title', models.CharField(blank=True, default='', max_length=255)),
                ('twitter_description', models.CharField(blank=True, default='', max_length=200)),
                ('twitter_creator', models.CharField(blank=True, default='', help_text='@name of author', max_length=50)),
                ('twitter_image', models.CharField(blank=True, default='', help_text='Images must be at least 120x120px', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='AgentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('canonical', models.URLField(blank=True, default='')),
                ('title_tag', models.CharField(blank=True, default='', max_length=255)),
                ('meta_title', models.CharField(blank=True, default='', max_length=255)),
                ('meta_description', models.TextField(blank=True, default='')),
                ('meta_keywords', models.TextField(blank=True, default='')),
                ('og_title', models.CharField(blank=True, default='', max_length=255)),
                ('og_type', models.CharField(blank=True, default='', max_length=50)),
                ('og_url', models.URLField(blank=True, default='')),
                ('og_img', models.URLField(blank=True, default='')),
                ('og_description', models.TextField(blank=True, default='')),
                ('twitter_card', models.CharField(blank=True, default='', help_text='Type of Twitter card', max_length=50)),
                ('twitter_site', models.CharField(blank=True, default='', help_text='@name of publisher', max_length=50)),
                ('twitter_title', models.CharField(blank=True, default='', max_length=255)),
                ('twitter_description', models.CharField(blank=True, default='', max_length=200)),
                ('twitter_creator', models.CharField(blank=True, default='', help_text='@name of author', max_length=50)),
                ('twitter_image', models.CharField(blank=True, default='', help_text='Images must be at least 120x120px', max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name_short', models.CharField(blank=True, default='', help_text='Short version of the agent name, a nickname or first name.', max_length=50)),
                ('job_title', models.CharField(blank=True, max_length=255)),
                ('about_me', wagtail.core.fields.RichTextField(blank=True, default='')),
                ('landscape_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('profile_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='AgentPageOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offices.OfficePage')),
                ('offices', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='offices', to='agents.AgentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgentPageTeamMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='agents.AgentPage')),
                ('team_members', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='agents.AgentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
